"""
This type stub file was generated by pyright.
"""

from qtpy import QtWidgets

class PropertyChangedCmd(QtWidgets.QUndoCommand):
    """
    Node property changed command.

    Args:
        node (NodeGraphQt.NodeObject): node.
        name (str): node property name.
        value (object): node property value.
    """

    def __init__(self, node, name, value) -> None: ...
    def set_node_property(self, name, value):  # -> None:
        """
        updates the node view and model.
        """
        ...

    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class NodeVisibleCmd(QtWidgets.QUndoCommand):
    """
    Node visibility changed command.

    Args:
        node (NodeGraphQt.NodeObject): node.
        visible (bool): node visible value.
    """

    def __init__(self, node, visible) -> None: ...
    def set_node_visible(self, visible):  # -> None:
        ...

    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class NodeWidgetVisibleCmd(QtWidgets.QUndoCommand):
    """
    Node widget visibility command.

    Args:
        node (NodeGraphQt.NodeObject): node object.
        name (str): node widget name.
        visible (bool): initial visibility state.
    """

    def __init__(self, node, name, visible) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class NodeMovedCmd(QtWidgets.QUndoCommand):
    """
    Node moved command.

    Args:
        node (NodeGraphQt.NodeObject): node.
        pos (tuple(float, float)): new node position.
        prev_pos (tuple(float, float)): previous node position.
    """

    def __init__(self, node, pos, prev_pos) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class NodeAddedCmd(QtWidgets.QUndoCommand):
    """
    Node added command.

    Args:
        graph (NodeGraphQt.NodeGraph): node graph.
        node (NodeGraphQt.NodeObject): node.
        pos (tuple(float, float)): initial node position (optional).
        emit_signal (bool): emit node creation signals. (default: True)
    """

    def __init__(self, graph, node, pos=..., emit_signal=...) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class NodesRemovedCmd(QtWidgets.QUndoCommand):
    """
    Node deleted command.

    Args:
        graph (NodeGraphQt.NodeGraph): node graph.
        nodes (list[NodeGraphQt.BaseNode or NodeGraphQt.NodeObject]): nodes.
        emit_signal (bool): emit node deletion signals. (default: True)
    """

    def __init__(self, graph, nodes, emit_signal=...) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class NodeInputConnectedCmd(QtWidgets.QUndoCommand):
    """
    "BaseNode.on_input_connected()" command.

    Args:
        src_port (NodeGraphQt.Port): source port.
        trg_port (NodeGraphQt.Port): target port.
    """

    def __init__(self, src_port, trg_port) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class NodeInputDisconnectedCmd(QtWidgets.QUndoCommand):
    """
    Node "on_input_disconnected()" command.

    Args:
        src_port (NodeGraphQt.Port): source port.
        trg_port (NodeGraphQt.Port): target port.
    """

    def __init__(self, src_port, trg_port) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class PortConnectedCmd(QtWidgets.QUndoCommand):
    """
    Port connected command.

    Args:
        src_port (NodeGraphQt.Port): source port.
        trg_port (NodeGraphQt.Port): target port.
        emit_signal (bool): emit port connection signals.
    """

    def __init__(self, src_port, trg_port, emit_signal) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class PortDisconnectedCmd(QtWidgets.QUndoCommand):
    """
    Port disconnected command.

    Args:
        src_port (NodeGraphQt.Port): source port.
        trg_port (NodeGraphQt.Port): target port.
        emit_signal (bool): emit port connection signals.
    """

    def __init__(self, src_port, trg_port, emit_signal) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class PortLockedCmd(QtWidgets.QUndoCommand):
    """
    Port locked command.

    Args:
        port (NodeGraphQt.Port): node port.
    """

    def __init__(self, port) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class PortUnlockedCmd(QtWidgets.QUndoCommand):
    """
    Port unlocked command.

    Args:
        port (NodeGraphQt.Port): node port.
    """

    def __init__(self, port) -> None: ...
    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...

class PortVisibleCmd(QtWidgets.QUndoCommand):
    """
    Port visibility command.

    Args:
        port (NodeGraphQt.Port): node port.
    """

    def __init__(self, port, visible) -> None: ...
    def set_visible(self, visible):  # -> None:
        ...

    def undo(self):  # -> None:
        ...

    def redo(self):  # -> None:
        ...
