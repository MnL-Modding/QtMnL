"""
This type stub file was generated by pyright.
"""

from typing import Optional
from filelock import AcquireReturnProxy, FileLock as _FileLock
from .common import PathOrStr

class FileLock(_FileLock):
    """
    This is just a subclass of the `FileLock` class from the `filelock` library, except that
    it adds an additional argument to the `__init__` method: `read_only_ok`.

    By default this flag is `False`, which an exception will be thrown when a lock
    can't be acquired due to lack of write permissions.
    But if this flag is set to `True`, a warning will be emitted instead of an error when
    the lock already exists but the lock can't be acquired because write access is blocked.
    """

    def __init__(
        self, lock_file: PathOrStr, timeout=..., read_only_ok: bool = ...
    ) -> None: ...
    def acquire(
        self, timeout=..., poll_interval=..., **kwargs
    ) -> Optional[AcquireReturnProxy]: ...
