"""
This type stub file was generated by pyright.
"""

import io
import requests
from typing import Optional
from .scheme_client import SchemeClient

RECOVERABLE_SERVER_ERROR_CODES = ...

class RecoverableServerError(requests.exceptions.HTTPError):
    """
    Server returned one of `RECOVERABLE_SERVER_ERROR_CODES`.
    """

    ...

def session_with_backoff() -> requests.Session:
    """
    We ran into an issue where http requests to s3 were timing out,
    possibly because we were making too many requests too quickly.
    This helper function returns a requests session that has retry-with-backoff
    built in. See
    <https://stackoverflow.com/questions/23267409/how-to-implement-retry-mechanism-into-python-requests-library>.
    """
    ...

class HttpClient(SchemeClient):
    scheme = ...
    recoverable_errors = ...
    def __init__(self, resource: str) -> None: ...
    @property
    def head_response(self):  # -> Response:
        ...

    def get_etag(self) -> Optional[str]: ...
    def get_size(self) -> Optional[int]: ...
    def get_resource(self, temp_file: io.BufferedWriter) -> None: ...
    def validate_response(self, response):  # -> None:
        ...
