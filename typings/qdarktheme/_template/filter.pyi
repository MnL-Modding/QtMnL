"""
This type stub file was generated by pyright.
"""

from qdarktheme._color import Color
from qdarktheme.qtpy import __version__ as qt_version
from qdarktheme.qtpy.qt_compat import QT_API

"""A module containing multiple filters used by template engine."""
_logger = ...
if qt_version is None:
    _QT_VERSION = ...
else:
    _QT_VERSION = ...
if QT_API is None:
    _QT_API = ...
else:
    _QT_API = ...
if None in (qt_version, QT_API):
    ...

def color(color_info: str | dict[str, str | dict], state: str | None = ...) -> Color:
    """Filter for template engine. This filter convert color info data to color object."""
    ...

def palette_format(color: Color) -> str:
    """Filter for template engine. This filter convert color object to ARGB hex format.

    QPalette parser for hex only support ARGB hex format. color.Color class use RGB hex format.
    So we need to convert Color object to ARGB hex format.
    """
    ...

def url(color: Color, id: str, rotate: int = ...) -> str:
    """Filter for template engine. This filter create url for svg and output svg file."""
    ...

def env(
    text,
    value: str,
    version: str | None = ...,
    qt: str | None = ...,
    os: str | None = ...,
) -> str:
    """Filter for template engine. This filter output empty string when unexpected environment."""
    ...

def corner(corner_shape: str, size: str) -> str:
    """Filter for template engine. This filter manage corner shape."""
    ...
